import{_ as i,c as e,a as l,o as r}from"./app-CCZupzhC.js";const t={};function o(n,a){return r(),e("div",null,a[0]||(a[0]=[l('<h2 id="_1-java三大平台" tabindex="-1"><a class="header-anchor" href="#_1-java三大平台"><span>1 Java三大平台</span></a></h2><ol><li>Java SE 标准版(J2SE，Java 2 Platform Standard Edition)</li><li>Java EE 企业版(J2EE，Java 2 Platform, Enterprise Edition)</li><li>Java ME 微型版(J2ME，Java 2 Platform Micro Edition)</li></ol><p>Java的开发工具包 JDK (Java Development Kit)</p><hr><details class="hint-container details"><summary>理解即可</summary><h2 id="_2-java定义及语言特点" tabindex="-1"><a class="header-anchor" href="#_2-java定义及语言特点"><span>2 Java定义及语言特点</span></a></h2><h3 id="_2-1-what-is-java" tabindex="-1"><a class="header-anchor" href="#_2-1-what-is-java"><span>2.1 What is Java?</span></a></h3><ul><li>Java是一种面向对象的编程语言(OOP)</li><li>它的语法结构与C和C++语言极为相似</li><li>Java所用的语法十分简单</li></ul><h3 id="_2-2-特点" tabindex="-1"><a class="header-anchor" href="#_2-2-特点"><span>2.2 特点</span></a></h3><ul><li>面向对象</li><li>平台无关性</li><li>安全稳定</li><li>支持多线程</li><li>类库丰富： Java提供了大量的类以满足网络化、多线程、面向对象系统的需要</li><li>用途广泛</li></ul><h3 id="_2-3-java是简洁版c" tabindex="-1"><a class="header-anchor" href="#_2-3-java是简洁版c"><span>2.3 Java是简洁版C++</span></a></h3><ul><li>无直接指针操作</li><li>自动内存管理</li><li>数据类型长度固定</li><li>不用头文件</li><li>不包含结构和联合</li><li>不支持宏</li><li>不用多重继承</li><li>无类外全局变量</li><li>无GOTO</li></ul></details><h2 id="_3-java运行机制" tabindex="-1"><a class="header-anchor" href="#_3-java运行机制"><span>3 Java运行机制</span></a></h2><h3 id="_3-1-核心机制" tabindex="-1"><a class="header-anchor" href="#_3-1-核心机制"><span>3.1 核心机制</span></a></h3><ul><li>Java 虚拟机 - JVM (Java Virtual Machine)</li><li>代码安全性检测(Code Security)</li><li>垃圾收集机制(Garbage collection)</li></ul><h3 id="_3-2-java的编译与运行" tabindex="-1"><a class="header-anchor" href="#_3-2-java的编译与运行"><span>3.2 Java的编译与运行</span></a></h3><ol><li>用户编写Java代码，生成Java源文件 <code>Source.java</code> 。</li><li>运行<code>javac Source.java</code>, 编译器将源文件编译成字节码(bytecode)文件 <code>Source.class</code> 。</li><li>运行<code>java Source</code>, 各个平台的虚拟机将字节码文件加载到内存中，并执行。 <blockquote><p>java在提供了各个平台的虚拟机(JVM for Dos, JVM for Windows, JVM for Linux, JVM for Mac OS),这是它能跨平台运行的原因</p><blockquote><p>Java虚拟机:在一台计算机上由软件或硬件模拟的计算机。它读取并处理经编译过的字节码class文件。它规范定义了：• 指令集 • 寄存器集 • 类文件结构 • 堆栈 • 垃圾收集堆 • 内存区域</p></blockquote></blockquote></li></ol><h3 id="_3-3-java运行环境-jre" tabindex="-1"><a class="header-anchor" href="#_3-3-java运行环境-jre"><span>3.3 Java运行环境（JRE）</span></a></h3><p>JRE (The Java Runtime Environment) = JVM + API(Lib)</p><p><strong>JRE运行程序时的三项主要功能：</strong></p><ol><li>加载代码:由class loader 完成;</li><li>校验代码:由bytecode verifier 完成;</li><li>执行代码:由 runtime interpreter完成。</li></ol><h3 id="_3-4-java自动垃圾回收-garbage-collection-技术" tabindex="-1"><a class="header-anchor" href="#_3-4-java自动垃圾回收-garbage-collection-技术"><span>3.4 Java自动垃圾回收(garbage collection)技术</span></a></h3><p>在C/C++ 等语言中，由程序员负责回收无用内存。Java语言自动垃圾回收：</p><ul><li>系统级线程跟踪存储空间的分配情况</li><li>在JVM的空闲时，检查并释放那些可被释放的存储器空间</li><li>程序员无须也无法精确控制和干预该回收过程</li></ul><h3 id="_3-5-jdk-java开发工具包" tabindex="-1"><a class="header-anchor" href="#_3-5-jdk-java开发工具包"><span>3.5 JDK(Java开发工具包)</span></a></h3><p><strong>JDK = (JRE = JVM + API) + Tools</strong></p>',19)]))}const c=i(t,[["render",o]]),d=JSON.parse('{"path":"/programmingJava/Java%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%8C%97%E5%A4%A7/h9zubl5j/","title":"Java语言","lang":"zh-CN","frontmatter":{"title":"Java语言","createTime":"2025/04/07 10:58:51","permalink":"/programmingJava/Java程序设计北大/h9zubl5j/"},"headers":[],"readingTime":{"minutes":2.1,"words":629},"git":{"updatedTime":1754301252000,"contributors":[{"name":"WillBetter","username":"WillBetter","email":"WillWillBetter@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/WillBetter?v=4","url":"https://github.com/WillBetter"}]},"filePathRelative":"notes/programming/Java/Java程序设计北大/1.Java简介/1.Java语言.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"93b803","sort":10001,"name":"programming"},{"id":"ea3a17","sort":10004,"name":"Java"},{"id":"2ad0a4","sort":10005,"name":"Java程序设计北大"},{"id":"5ab7b7","sort":1,"name":"Java简介"}]}');export{c as comp,d as data};
