import{_ as s,c as a,a as n,o as l}from"./app-CCZupzhC.js";const e={};function t(p,i){return l(),a("div",null,i[0]||(i[0]=[n(`<h2 id="_1-程序类型" tabindex="-1"><a class="header-anchor" href="#_1-程序类型"><span>1. 程序类型</span></a></h2><ul><li>Application： 独立程序，需要调用JVM运行</li><li>Applet： 嵌在HTML网页中的非独立的程序 <ul><li>由专门的appletViewer来运行</li><li>或由Web 浏览器(调用JAVA虚拟机)来运行</li></ul></li></ul><h2 id="_2-application程序构成" tabindex="-1"><a class="header-anchor" href="#_2-application程序构成"><span>2. Application程序构成</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//package com.example; 可以有0~1个</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// import java.util.*; 可有0~多个</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 只能有一个public类，且public类名与文件同名</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// main()的写法是固定的</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> HelloWorldApp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">	public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	{</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // System.out.print 及 println 及 printf</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">		System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">HelloWorld</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-applet程序构成" tabindex="-1"><a class="header-anchor" href="#_3-applet程序构成"><span>3. Applet程序构成</span></a></h2><p>JApplet类在Java SE 9中被标记为过时，故不多做讨论。</p><p>实际应用中用的也不多，不符合现在前后端分离的大环境。</p>`,7)]))}const r=s(e,[["render",t]]),k=JSON.parse('{"path":"/programmingJava/Java%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%8C%97%E5%A4%A7/4uaci7bu/","title":"程序类型","lang":"zh-CN","frontmatter":{"title":"程序类型","createTime":"2025/04/07 14:13:21","permalink":"/programmingJava/Java程序设计北大/4uaci7bu/"},"headers":[],"readingTime":{"minutes":0.63,"words":188},"git":{"updatedTime":1754301252000,"contributors":[{"name":"WillBetter","username":"WillBetter","email":"WillWillBetter@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/WillBetter?v=4","url":"https://github.com/WillBetter"}]},"filePathRelative":"notes/programming/Java/Java程序设计北大/2.Java程序/1.程序类型.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"93b803","sort":10001,"name":"programming"},{"id":"ea3a17","sort":10004,"name":"Java"},{"id":"2ad0a4","sort":10005,"name":"Java程序设计北大"},{"id":"fe87e2","sort":2,"name":"Java程序"}]}');export{r as comp,k as data};
